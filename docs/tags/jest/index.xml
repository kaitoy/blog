<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>jest on To Be Decided</title>
    <link>https://www.kaitoy.xyz/tags/jest/</link>
    <description>Recent content in jest on To Be Decided</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© 2015 Kaito Yamada</copyright>
    <lastBuildDate>Wed, 07 Nov 2018 23:41:30 +0900</lastBuildDate>
    
	<atom:link href="https://www.kaitoy.xyz/tags/jest/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>React &#43; Reduxアプリケーションプロジェクトのテンプレートを作る ― その10: Code Splitting、Flow、Jest、Enzyme</title>
      <link>https://www.kaitoy.xyz/2018/11/07/creating-react-redux-app-from-scratch-10/</link>
      <pubDate>Wed, 07 Nov 2018 23:41:30 +0900</pubDate>
      
      <guid>https://www.kaitoy.xyz/2018/11/07/creating-react-redux-app-from-scratch-10/</guid>
      <description>ReactとReduxを学ぶために、開発環境というかプロジェクトテンプレートをスクラッチから作っている。 (最終的な成果はGitHubに置いた。)
前回はReact Routerをセットアップした。
今回は残りの要素をまとめてかたづける。
(2018/11/21更新)
   (adsbygoogle = window.adsbygoogle || []).push({});  Code Splitting webpackでリソースをバンドルすると、一回の通信でアプリの要素全てをロードできるので効率いいような気がするけど、アプリの規模が大きくなってくるとバンドルサイズが大きくなって、初期ロード時間が長くなり、つまり初期画面の表示に時間がかかるようになってしまう。 そもそも、いつもアプリの全画面をみるとは限らないので、いつもアプリの全要素をロードするのは無駄。
そんな問題に対応する技術がCode Splitting。 バンドルを分割し、(理想的には)必要な時に必要な分だけロードする技術。
Code Splittingのやりかたはいくつかあるが、ダイナミックインポートとReact.lazyとReact Suspenseとwebpackのプリフェッチディレクティブを使ったやつを、フォントモジュールに適用してみる。
src/components/App.jsx:
-import React from &amp;#39;react&amp;#39;; +import React, { Suspense } from &amp;#39;react&amp;#39;;  import { Route, Redirect } from &amp;#39;react-router-dom&amp;#39;; import Home from &amp;#39;./Home&amp;#39;; -import Fonts from &amp;#39;../fonts&amp;#39;;  +const Fonts = React.lazy(() =&amp;gt; import(/* webpackPrefetch: true */ &amp;#39;../fonts&amp;#39;));  const App = () =&amp;gt; ( &amp;lt;div&amp;gt; &amp;lt;Route exact path=&amp;#34;/&amp;#34; render={() =&amp;gt; &amp;lt;Redirect to=&amp;#34;/home&amp;#34; /&amp;gt;} /&amp;gt; &amp;lt;Route exact path=&amp;#34;/home&amp;#34; component={Home} /&amp;gt; - &amp;lt;Fonts /&amp;gt; + &amp;lt;Suspense fallback={&amp;lt;div /&amp;gt;}&amp;gt; + &amp;lt;Fonts /&amp;gt; + &amp;lt;/Suspense&amp;gt;  &amp;lt;/div&amp;gt; ); export default App;  コード変更はこれだけ。</description>
    </item>
    
  </channel>
</rss>