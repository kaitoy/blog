<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>bow on To Be Decided</title>
    <link>https://www.kaitoy.xyz/tags/bow/</link>
    <description>Recent content in bow on To Be Decided</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© 2015 Kaito Yamada</copyright>
    <lastBuildDate>Sat, 19 Nov 2016 11:41:07 -0700</lastBuildDate>
    
	<atom:link href="https://www.kaitoy.xyz/tags/bow/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Currently Pcap4J Doesn&#39;t Work on Bash on Windows</title>
      <link>https://www.kaitoy.xyz/2016/11/19/pcap4j-doesnt-work-on-bow-yet/</link>
      <pubDate>Sat, 19 Nov 2016 11:41:07 -0700</pubDate>
      
      <guid>https://www.kaitoy.xyz/2016/11/19/pcap4j-doesnt-work-on-bow-yet/</guid>
      <description>TL;DR I&amp;rsquo;ve attempted to run Pcap4J on Bash on Windows (BoW) but it didn&amp;rsquo;t work due to lack of support for network staff in BoW.

   (adsbygoogle = window.adsbygoogle || []).push({});  What&amp;rsquo;s Bash on Windows Bash on Windows is a feature released in Windows 10 Anniversary Update to add Linux fanctionalities to Windows.
With this feature, we can run Bash and several Linux commands on Windows.</description>
    </item>
    
    <item>
      <title>Bash on WindowsでWindows側からUbuntu側のファイルをいじると壊れることがあるので注意</title>
      <link>https://www.kaitoy.xyz/2016/11/19/bow-do-not-change-linux-files-from-windows/</link>
      <pubDate>Sat, 19 Nov 2016 01:05:26 -0700</pubDate>
      
      <guid>https://www.kaitoy.xyz/2016/11/19/bow-do-not-change-linux-files-from-windows/</guid>
      <description>Bash on WindowsでWindows側からUbuntu側のファイルをいじると危険という情報を見つけたので、試してみたら確かに困った状態になった話。

   (adsbygoogle = window.adsbygoogle || []).push({});  Bash on Windowsとは Bash on Windows (aka BoW)は、2016/8/3に公開されたWindows 10 Anniversary Updateで使えるようになった、Windows上でBashが使えるようになる機能。
POSIX APIのWindows実装を提供するCygwinなどとは違い、WindowsのサブシステムとしてUbuntuが動き、その上でBashが動き、そこからUbuntu用のバイナリをそのまま利用できるというもの。
2016/11/17現在でまだベータ版の機能。
Windows側からUbuntu側のファイルをいじると壊れる問題 Microsoftの中の人のブログに、BoWがセットアップされた環境で、Windows側からUbuntu側のファイル(i.e. %localappdata%\lxss\以下のファイル)をいじると壊れるという話があった。 いかにもやってしまいそうな操作で危険だし、実際このブログの人はこれに関する問い合わせに毎日1,2件対応しているそうな。
原因は上記ブログに詳しいが、簡単に言うと、Windows側のプロセスがUbuntu側のファイルを作ったり編集したりする際、パーミッションなどのメタデータを適切に設定しないため、Ubuntu側でファイルが壊れたと判断されてしまうから。 こうなると、結果としてファイルが消えてしまったり、壊れたデータで上書きされてしまったりするとのこと。
因みに、Ubuntu側からWindows側のファイルをいじるのは問題ないらしい。
再現確認 そういえばまだBoWをさわったことがなかったので、セットアップして件の問題を体験してみた。
環境は、VMware Player 7.1.0で作ったVMに評価版のWindows 10 Enterprise v1607をインストールしたもの。 セットアップは公式の手順に従うだけ。2ステップだけの簡単な手順。
セットアップ後、コマンドプロンプトでbashとうつとBoWが起動する。(初回はインストール処理が走り、十数分待たされる。)
[コマンドプロンプト → Bash] 
再現確認に使うのはhogeと書いたhoge.txt。 これをWindows側のC:\Users\kaitoy\Desktop\とUbuntu側の/home/kaitoy/に置く。
[コマンドプロンプト]
[Bash]

Windows側からは、Ubuntuのファイルシステムが%localappdata%\lxss\にマウントされているように見える。 (lxssはエクスプローラーのオプションから「保護されたオペレーティングシステムファイルを表示しない（推奨）」のチェックをはずさないと見えない。見えなくてもアドレスバーにパスを入力すればアクセスできるけど。)

一方Ubuntu側からは、WindowsのCドライブが/mnt/cにマウントされているように見える。
[Bash]

ここで、コマンドプロンプトを開き、%localappdata%\lxss\hoge\kaitoy\(i.e. Ubuntu側の/home/kaitoy/)にcdし、hoge.txtをechoで編集してみた。
[コマンドプロンプト]

したらBashから見えなくなった。アクセスしようとすると「Input/output error」というエラーになる。これが件の現象か。
[Bash]
エクスプローラからは見えていたので、GUIで%localappdata%\lxss\hoge\kaitoy\hoge.txtを削除したら正常な状態に戻った。

再度同じhoge.txtを作り、今度はメモ帳で編集して内容をfooに変えてみた。 この場合は特に問題なし。なぜだ?</description>
    </item>
    
  </channel>
</rss>