<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>material-ui on To Be Decided</title>
    <link>https://www.kaitoy.xyz/tags/material-ui/</link>
    <description>Recent content in material-ui on To Be Decided</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© 2015 Kaito Yamada</copyright>
    <lastBuildDate>Thu, 06 Sep 2018 23:33:31 +0900</lastBuildDate>
    
	<atom:link href="https://www.kaitoy.xyz/tags/material-ui/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>React &#43; Reduxアプリケーションプロジェクトのテンプレートを作る ― その5: Material-UIとWebフォント</title>
      <link>https://www.kaitoy.xyz/2018/09/06/creating-react-redux-app-from-scratch-05/</link>
      <pubDate>Thu, 06 Sep 2018 23:33:31 +0900</pubDate>
      
      <guid>https://www.kaitoy.xyz/2018/09/06/creating-react-redux-app-from-scratch-05/</guid>
      <description>ReactとReduxを学ぶために、開発環境というかプロジェクトテンプレートをスクラッチから作っている。 (最終的な成果はGitHubに置いた。)
前回はCSS周りの処理系をセットアップした。
(2018/11/21更新)
   (adsbygoogle = window.adsbygoogle || []).push({});  既成Reactコンポーネント 前回まででHTMLもCSSもReactコンポーネント単位で書けるようになったんだけど、実際、自分で1からコンポーネントを書くのは、特にデザインセンスがない人にとっては辛い。 かっこいいUIコンポーネントを作りたいならデザイナーの協力が必要だけど、個人の開発などそれができない状況も多い。
という問題を抱えた人たち向けなのかはわからないが、既成のReactコンポーネントセットが色々OSSで提供されている。
 Material-UI: GoogleのマテリアルデザインのReact実装。 Semantic UI React: Semantic UIのReactバインディング。 antd: Ant DesignのReact実装。 Blueprint: 複雑でデータ量の多いUI向けに作られたReact UIツールキット。 React-Bootstrap: BootstrapのReactバインディング。現時点ではv4未対応。 Grommet: HPEによるエンタープライズレディなデザインシステム。 Office UI Fabric React: OfficeなどのMicrosoft製品に使われているReactコンポーネントセット。  
今回はこの中でも圧倒的に人気なMaterial-UIを導入する。
Material-UI Material-UIは簡単に使える。 とりあえずコアパッケージをインストールする。
yarn add @material-ui/core v3.5.1が入った。

あとはパッケージに入っている色々なコンポーネントをMaterial-UIのドキュメント見ながら使えばいいだけ。
src/components/App.jsx:
import React from &amp;#39;react&amp;#39;; import styled from &amp;#39;styled-components&amp;#39;; +import Button from &amp;#39;@material-ui/core/Button&amp;#39;;  const Wrapper = styled.</description>
    </item>
    
  </channel>
</rss>