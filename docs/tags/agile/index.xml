<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>agile on To Be Decided</title>
    <link>https://www.kaitoy.xyz/tags/agile/</link>
    <description>Recent content in agile on To Be Decided</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© 2015 Kaito Yamada</copyright>
    <lastBuildDate>Thu, 11 Apr 2019 23:34:53 +0900</lastBuildDate>
    
	<atom:link href="https://www.kaitoy.xyz/tags/agile/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>アジャイル開発の真髄 ― DRY</title>
      <link>https://www.kaitoy.xyz/2019/04/11/essence-of-agile-dry/</link>
      <pubDate>Thu, 11 Apr 2019 23:34:53 +0900</pubDate>
      
      <guid>https://www.kaitoy.xyz/2019/04/11/essence-of-agile-dry/</guid>
      <description>&lt;p&gt;今携わっているプロジェクトでは&lt;a href=&#34;https://www.scrumguides.org/&#34;&gt;Scrum&lt;/a&gt;で開発していて、私自身2年ほどスクラムマスタを経験した。
うちの会社はかなり保守的で、ごく最近まで&lt;a href=&#34;https://en.wikipedia.org/wiki/Waterfall_model&#34;&gt;ウォータフォール&lt;/a&gt;で開発するのがあたりまえだったので、そこから文化を変え、マインドシフトし、アジャイルなプロセスに順応していくにはそれなりに苦労があった。
今でも、アジャイルに慣れていないエンジニアがアジャイルなチームに入ってくると、やはりいろいろな違いに戸惑っているように見えるし、こちらとしても期待するアウトプットがなかなか出てこなくて困ることが多い。&lt;/p&gt;

&lt;p&gt;私はスクラムマスタというロールを任されてはいるが、どちらかと言えばテックリードやアーキテクト的な役割に期待されている気がしていて、そっちに力が入ってしまうのが実情。
そんな状況なので、コードレビューには結構時間を割いているんだけど、アジャイルなエンジニアとそうでないエンジニアが書くコードにはなんだかとても重大な差異があるような気がずっとしていた。
で、最近それを説明できるまでに考えがまとまってきたので、ここに書き残しておく。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>